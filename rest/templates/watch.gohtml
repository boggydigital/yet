{{define "watch"}}
    <!doctype html>
    <html lang="en">
    <head>
        <meta charset='UTF-8'>
        <link rel='icon'
              href='data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>ðŸ”»</text></svg>'
              type='image/svg+xml'/>
        <meta name='viewport' content='width=device-width, initial-scale=1.0'>
        <meta name='color-scheme' content='dark light'>
        <title>{{.VideoTitle}}</title>
        {{template "css-shared"}}
        <style id="css-watch">
            video {
                width: 100%;
                height: 100%;
                aspect-ratio: 16/9;
                margin-block-start: var(--small);
                border-radius: var(--border-radius);
            }

            progress {
                width: 100%;
            }

            h1 {
                margin-block: var(--normal);
                font-size: var(--fs-x-larger);
            }

            h2 {
                display: inline
            }

            .video_source {
                text-align: right;
                color: var(--color-brown);
                font-size: var(--fs-x-smaller);

                &.local {
                    color: var(--color-light-green)
                }
            }

            .video_description,
            .properties {
                margin-block: var(--large);
                padding: var(--normal);
                border-radius: var(--border-radius-large);
                color: var(--subtle-color);
                background-color: var(--highlight-color);
            }

            .properties {
                display: flex;
                flex-direction: column;
                gap: var(--normal);
            }

            .properties h3 {
                margin: 0;
                margin-block-end: var(--x-small);
                font-weight: var(--fw-bolder);
                font-size: var(--fs-normal)

            }

            .properties span {
                font-size: var(--fs-smaller);
                color: var(--color)
            }

            a.action {
                margin-block: var(--normal)
            }

        </style>
    </head>
    <body>

    {{template "icons"}}

    {{template "back"}}

    <div class='video_source {{if .LocalPlayback}}local{{end}}'>This video will play from
        the {{if .LocalPlayback}}local{{else}}origin{{end}} server
    </div>

    <video controls='controls' preload='metadata' poster='{{.VideoPoster}}'>
        <source src='{{.VideoUrl}}'/>
    </video>

    {{if eq .CurrentTimeSeconds "0"}}
    {{else}}
        {{if .LastEndedTime}}
        {{else}}
            <progress value="{{.CurrentTimeSeconds}}" max="{{.DurationSeconds}}"></progress>
        {{end}}
    {{end}}


    <ul class="video_details_container">

        <h1 class='video_title'>{{.VideoTitle}}</h1>

        {{if .ChannelId}}
            {{if .ChannelTitle}}
                <a class="channel" href="/channel?id={{.ChannelId}}">Channel: {{.ChannelTitle}}</a>
            {{end}}
        {{end}}

        {{if .VideoDescription}}
            <details>
                <summary>{{template "plus_icon"}}<h2>Description</h2></summary>
                <div class='video_description'>{{.VideoDescription}}</div>
            </details>
        {{end}}

        {{if .VideoProperties}}
            <details>
                <summary>{{template "plus_icon"}}<h2>Properties</h2></summary>
                <ul class="properties">
                    {{$videoProperties := .VideoProperties}}
                    {{range $property := .VideoPropertiesOrder}}
                        {{$value := index $videoProperties $property}}
                        {{if $value}}
                            <li>
                                <h3>{{$property}}</h3>
                                <span>{{$value}}</span>
                            </li>
                        {{end}}
                    {{end}}
                </ul>
            </details>
        {{end}}

        {{if .PlaylistViewModel}}
            <details open>
                <summary>{{template "plus_icon"}}<h2>Playlist</h2></summary>
                <ul class="playlists">
                    {{template "playlist" .PlaylistViewModel}}
                </ul>
            </details>
        {{end}}

        <a class='action' href="/manage_video?v={{.VideoId}}">Manage video</a>

    </ul>

    <script>
        let video = document.getElementsByTagName('video')[0];
    </script>


    {{if .CurrentTimeSeconds}}
        {{if .LastEndedTime}}
        {{else}}
            <script>video.currentTime = {{.CurrentTimeSeconds}};</script>
        {{end}}

    {{end}}

    <script>
        let lastProgressUpdate = new Date();

        let prg = document.getElementsByTagName('progress')[0]
        video.addEventListener('timeupdate', (e) => {
            let now = new Date();
            let elapsed = now - lastProgressUpdate;
            if (elapsed > 3000) {
            if (prg) {prg.value = video.currentTime}
                fetch('/progress', {
                    method: 'post',
                    headers: {
                        'Content-Type': 'application/json'},
                    body: JSON.stringify({
                        v: '{{.VideoId}}',
                        t: video.currentTime.toString()})
                }).then((resp) => { if (resp && !resp.ok) {
                    console.log(resp)}
                });
                lastProgressUpdate = now;
            }});
    </script>

    <script>
        video.addEventListener('ended', (e) => {
        fetch('/ended', {
                method: 'post',
                headers: {
                    'Content-Type': 'application/json'},
                body: JSON.stringify({v: '{{.VideoId}}'})
            }).then((resp) => { if (resp && !resp.ok) {
                console.log(resp)}
            });
        if (prg) {prg.value = prg.max}
        });
    </script>

    <script>
        document.body.addEventListener('keydown', (e) => {
            switch (e.keyCode) {
        // ArrowRight
                case 39:
                e.preventDefault();
                video.currentTime += 15;
                break;
        // ArrowLeft
                case 37:
                e.preventDefault();
                video.currentTime -= 15;
                break;
        // Space
                case 32:
                e.preventDefault();
                video.paused ? video.play() : video.pause();
                break;
            };
            });
    </script>

    </body>
    </html>
{{end}}
